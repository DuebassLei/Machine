<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gaolei.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.gaolei.entity.Customer">
    <id column="cus_id" jdbcType="VARCHAR" property="cusId" />
    <result column="worehouse_id" jdbcType="VARCHAR" property="worehouseId" />
    <result column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="make_time" jdbcType="TIME" property="makeTime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="purchase_num" jdbcType="REAL" property="purchaseNum" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <sql id="Base_Column_List">
    cus_id, worehouse_id, emp_id, name, info, make_time, address, phone, sex, status, 
    comment, purchase_num, level
  </sql>
  <!-- 查询所有的客户信息-->
  <select id="selectAllCustomer"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where cus_id = #{cusId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from customer
    where cus_id = #{cusId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.gaolei.entity.Customer">
    insert into customer (cus_id, worehouse_id, emp_id, 
      name, info, make_time, 
      address, phone, sex, 
      status, comment, purchase_num, 
      level)
    values (#{cusId,jdbcType=VARCHAR}, #{worehouseId,jdbcType=VARCHAR}, #{empId,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}, #{makeTime,jdbcType=TIME}, 
      #{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, #{comment,jdbcType=VARCHAR}, #{purchaseNum,jdbcType=REAL}, 
      #{level,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gaolei.entity.Customer">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cusId != null">
        cus_id,
      </if>
      <if test="worehouseId != null">
        worehouse_id,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="makeTime != null">
        make_time,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="purchaseNum != null">
        purchase_num,
      </if>
      <if test="level != null">
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cusId != null">
        #{cusId,jdbcType=VARCHAR},
      </if>
      <if test="worehouseId != null">
        #{worehouseId,jdbcType=VARCHAR},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="makeTime != null">
        #{makeTime,jdbcType=TIME},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="purchaseNum != null">
        #{purchaseNum,jdbcType=REAL},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gaolei.entity.Customer">
    update customer
    <set>
      <if test="worehouseId != null">
        worehouse_id = #{worehouseId,jdbcType=VARCHAR},
      </if>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="makeTime != null">
        make_time = #{makeTime,jdbcType=TIME},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="purchaseNum != null">
        purchase_num = #{purchaseNum,jdbcType=REAL},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where cus_id = #{cusId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gaolei.entity.Customer">
    update customer
    set worehouse_id = #{worehouseId,jdbcType=VARCHAR},
      emp_id = #{empId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      make_time = #{makeTime,jdbcType=TIME},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      comment = #{comment,jdbcType=VARCHAR},
      purchase_num = #{purchaseNum,jdbcType=REAL},
      level = #{level,jdbcType=INTEGER}
    where cus_id = #{cusId,jdbcType=VARCHAR}
  </update>
</mapper>